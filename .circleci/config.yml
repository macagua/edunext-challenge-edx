# Python CircleCI 2.0 configuration file https://circleci.com/docs/2.0/configuration-reference/
version: 2

# CircleCI Common References
references:
  deps_cache_key_001: &deps_cache_key_001
    dependency-cache-{{ checksum "001_challenge_stack/requirements/dev.txt" }}
  deps_cache_key_002: &deps_cache_key_002
    dependency-cache-{{ checksum "002_fun_coding_time/requirements/dev.txt" }}
  deps_backup_cache_key: &deps_backup_cache_key
    dependency-cache-
  save_cache_paths: &save_cache_paths
    - ./venv
    - .tox
    - ~/.cache/pip
    - ~/.local
    - ./eggs

# CircleCI Jobs
jobs:
  001_challenge_stack:
    docker:
      # Every job must define an image for the docker executor and subsequent
      # jobs may define a different image.
      - image: circleci/python:2.7.16-stretch
    environment:
      PROJECT_NAME: 001_challenge_stack
    working_directory: /home/circleci/project # as $CIRCLE_WORKING_DIRECTORY
    steps:
      # Step 1 - obtain repo from GitHub
      - checkout # checkout source code to working directory
      - restore_cache: # ensure this step occurs *before* installing dependencies
          keys:
            - *deps_cache_key_001
            # if cache for exact version of `dev.txt` is not present then load any most recent one
            - *deps_backup_cache_key

      # Step 2 - create virtual env and install dependencies
      - run:
          name: Install dependencies
          command: |
            sudo apt-get install python-virtualenv
            python -m virtualenv venv
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make bootstrap

      # Step 3.0 - run linter and tests
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make test

      # Step 3.1 - run tox tests
      - run:
          name: Running tox tests
          command: |
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make test-all

      # Step 4 - run server for 001_challenge_stack
      - run:
          name: Install dependencies
          command: |
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make run

      # Generates and stores a cache of a file or directory of files such as
      # dependencies or source code in our object storage.
      - save_cache:
          paths: *save_cache_paths
          key: *deps_cache_key_001

  002_fun_coding_time:
    docker:
      # Every job must define an image for the docker executor and subsequent
      # jobs may define a different image.
      - image: circleci/python:3.5.7-stretch
    environment:
      PROJECT_NAME: 002_fun_coding_time
    working_directory: /home/circleci/project # as $CIRCLE_WORKING_DIRECTORY
    steps:
      # Step 1 - obtain repo from GitHub
      - checkout # checkout source code to working directory
      - restore_cache: # ensure this step occurs *before* installing dependencies
          keys:
            - *deps_cache_key_002
            # if cache for exact version of `dev.txt` is not present then load any most recent one
            - *deps_backup_cache_key

      # Step 2 - create virtual env and install dependencies
      - run:
          name: Install dependencies
          command: |
            sudo apt-get install python-virtualenv
            python -m virtualenv venv
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make bootstrap

      # Step 3.0 - run linter and tests
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make test

      # Step 3.1 - run tox tests
      - run:
          name: Running tox tests
          command: |
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make test-all

      # Step 4 - run server for 002_challenge_stack
      - run:
          name: Install dependencies
          command: |
            . venv/bin/activate
            cd ${CIRCLE_WORKING_DIRECTORY}/${PROJECT_NAME}
            make run

      # Generates and stores a cache of a file or directory of files such as
      # dependencies or source code in our object storage.
      - save_cache:
          paths: *save_cache_paths
          key: *deps_cache_key_002

# CircleCI Workflows
workflows:
  version: 2
  api_back:
    jobs:
      - 001_challenge_stack:
          filters:
            branches:
              only: master
  api_proxy:
    jobs:
      - 002_fun_coding_time:
          filters:
            branches:
              only: master
